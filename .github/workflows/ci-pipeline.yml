name: Development check
run-name: ${{ github.actor }} pushing changes to ${{ github.head_ref }}
on:
  pull_request:
    types: [opened, reopened, synchronize, edited]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  test:
    name: Development check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - run: echo "new job triggered by ${{ github.event_name }} event."
      - uses: actions/checkout@v4
      - name: OSSF Scorecard action
        uses: ossf/scorecard-action@v2.4.0
        with:
          results_file: ./scorecard-results.json
          results_format: json
      - name: Setup python v${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Installing dependencies...
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Linting python files using pylint...
        run: |
          pip install pylint
          pylint $(git ls-files '*.py')
      - name: Unit Testing using pytest...
        run: |
          python -m pytest
      - name: linting dockerfile using hadolint...
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ github.repository }}:latest
      - run: echo "job status is ${{ job.status }}."
